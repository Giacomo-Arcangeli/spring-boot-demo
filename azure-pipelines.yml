trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- script: ls $(Build.SourcesDirectory)/target
  displayName: 'Elenco dei file nella directory target'


# Assicurati che i file .war siano generati e posizionati nella cartella di destinazione
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/target' # Assicurati che questo percorso sia corretto
    Contents: '**/*.war' # Specifica che vogliamo copiare solo i file .war
    TargetFolder: '$(Build.ArtifactStagingDirectory)' # Copia i file nella cartella di staging dell'artifact

# Aggiungi un passo per elencare i file, se necessario, per debugging
- script: ls $(Build.ArtifactStagingDirectory)
  displayName: 'Elenco dei file nella cartella di staging'

# Pubblica l'artifact della build
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)' # Usa la cartella di staging dell'artifact come percorso da pubblicare
    ArtifactName: 'webapp' # Nome dell'artifact, cambiato per chiarezza
    publishLocation: 'Container' # Pubblica l'artifact nel contenitore di Azure DevOps
